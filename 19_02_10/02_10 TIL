쿠키 : 
  쿠키는 웹 브라우저에 저장하는 일종의 데이터로
  브라우저가 꺼지거나 서버가 종료되어도 유지되는 값이다.

  모듈이므로 'npm install cookie-parser'를 입력하고
  에디터 내에서 require로 불러와 사용할 수 있다.

  불러온 cookie는 // app.use(cookieParser()) 등으로 실행하고
  res.cookie('쿠키의 변수 이름', 입력할 값)으로 쿠키를 할당할 수 있다.

  쿠키는 브라우저 상에서 확인할 수 있기 때문에 (관리자모드 -> Network -> 쿠키의 변수 이름)
  로그인이나 비밀번호 등 개인정보가 담긴 정보는 암호화를 해야 한다.
  암호화 하는 방법은 다음과 같다!
  
  먼저 app로 cookieParser를 use로 실행할 때!
  app.use(cookieParser('인자로 넣고 싶은 문자들을 임의로 넣는다.'))

  그 다음 req로 받아온 cookies 명령어 앞에 signed를 붙여준다.
  // req.signedCookies.blabla;

  다음으로 쿠키를 정의할 때 쓰는 app.cookie의 마지막 인자값으로
  // {signed : true} 라는 값을 넣어주면 비밀화에 성공한다.


세션 : 
  쿠키는 보안상으로 아이디나 비밀번호 같은 개인정보를 저장하는데에 보안적으로 상당히 취약하다.
  그 점을 보완하기 위해 나온 것이 세션이다.

  쿠키가 서버에서 가져온 데이터를 자신의 브라우저내에 저장하는 것이면
  세션은 쿠키 방식으로 데이터를 저장하지만 이 데이터는 오직 사용자의 id 값만 저장한다.

  예를 들어 {a : 1, b : 2, c: 3}이라는 객체가 있다고 가정했을 때
  세션은 이 객체의 키 값 ('a', 'b', 'c')만 쿠키처럼 브라우저의 데이터로 저장하고
  나머지의 밸류 값(1, 2, 3)은 서버의 데이터베이스나, 파일 같은 형식으로 저장한다.

  즉 세션과 쿠키의 차이는 실제로 사용하는 데이터(value 값)가
  브라우저 자체에 저장이 되느냐, 서버에 되느냐의 차이이다.